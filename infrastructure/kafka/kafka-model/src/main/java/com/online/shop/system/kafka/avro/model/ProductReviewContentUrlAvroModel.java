/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.online.shop.system.kafka.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ProductReviewContentUrlAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8424923076912118256L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProductReviewContentUrlAvroModel\",\"namespace\":\"com.online.shop.system.kafka.avro.model\",\"fields\":[{\"name\":\"productID\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"imageUrls\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"videoUrls\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
  }

  private static final BinaryMessageEncoder<ProductReviewContentUrlAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProductReviewContentUrlAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProductReviewContentUrlAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProductReviewContentUrlAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProductReviewContentUrlAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProductReviewContentUrlAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProductReviewContentUrlAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProductReviewContentUrlAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProductReviewContentUrlAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.UUID productID;
  private java.util.List<java.lang.String> imageUrls;
  private java.util.List<java.lang.String> videoUrls;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProductReviewContentUrlAvroModel() {}

  /**
   * All-args constructor.
   * @param productID The new value for productID
   * @param imageUrls The new value for imageUrls
   * @param videoUrls The new value for videoUrls
   */
  public ProductReviewContentUrlAvroModel(java.util.UUID productID, java.util.List<java.lang.String> imageUrls, java.util.List<java.lang.String> videoUrls) {
    this.productID = productID;
    this.imageUrls = imageUrls;
    this.videoUrls = videoUrls;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return productID;
    case 1: return imageUrls;
    case 2: return videoUrls;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: productID = (java.util.UUID)value$; break;
    case 1: imageUrls = (java.util.List<java.lang.String>)value$; break;
    case 2: videoUrls = (java.util.List<java.lang.String>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'productID' field.
   * @return The value of the 'productID' field.
   */
  public java.util.UUID getProductID() {
    return productID;
  }


  /**
   * Sets the value of the 'productID' field.
   * @param value the value to set.
   */
  public void setProductID(java.util.UUID value) {
    this.productID = value;
  }

  /**
   * Gets the value of the 'imageUrls' field.
   * @return The value of the 'imageUrls' field.
   */
  public java.util.List<java.lang.String> getImageUrls() {
    return imageUrls;
  }


  /**
   * Sets the value of the 'imageUrls' field.
   * @param value the value to set.
   */
  public void setImageUrls(java.util.List<java.lang.String> value) {
    this.imageUrls = value;
  }

  /**
   * Gets the value of the 'videoUrls' field.
   * @return The value of the 'videoUrls' field.
   */
  public java.util.List<java.lang.String> getVideoUrls() {
    return videoUrls;
  }


  /**
   * Sets the value of the 'videoUrls' field.
   * @param value the value to set.
   */
  public void setVideoUrls(java.util.List<java.lang.String> value) {
    this.videoUrls = value;
  }

  /**
   * Creates a new ProductReviewContentUrlAvroModel RecordBuilder.
   * @return A new ProductReviewContentUrlAvroModel RecordBuilder
   */
  public static com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder newBuilder() {
    return new com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder();
  }

  /**
   * Creates a new ProductReviewContentUrlAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProductReviewContentUrlAvroModel RecordBuilder
   */
  public static com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder newBuilder(com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder other) {
    if (other == null) {
      return new com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder();
    } else {
      return new com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new ProductReviewContentUrlAvroModel RecordBuilder by copying an existing ProductReviewContentUrlAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new ProductReviewContentUrlAvroModel RecordBuilder
   */
  public static com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder newBuilder(com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel other) {
    if (other == null) {
      return new com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder();
    } else {
      return new com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProductReviewContentUrlAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProductReviewContentUrlAvroModel>
    implements org.apache.avro.data.RecordBuilder<ProductReviewContentUrlAvroModel> {

    private java.util.UUID productID;
    private java.util.List<java.lang.String> imageUrls;
    private java.util.List<java.lang.String> videoUrls;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.productID)) {
        this.productID = data().deepCopy(fields()[0].schema(), other.productID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.imageUrls)) {
        this.imageUrls = data().deepCopy(fields()[1].schema(), other.imageUrls);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.videoUrls)) {
        this.videoUrls = data().deepCopy(fields()[2].schema(), other.videoUrls);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
    }

    /**
     * Creates a Builder by copying an existing ProductReviewContentUrlAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.productID)) {
        this.productID = data().deepCopy(fields()[0].schema(), other.productID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.imageUrls)) {
        this.imageUrls = data().deepCopy(fields()[1].schema(), other.imageUrls);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.videoUrls)) {
        this.videoUrls = data().deepCopy(fields()[2].schema(), other.videoUrls);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'productID' field.
      * @return The value.
      */
    public java.util.UUID getProductID() {
      return productID;
    }


    /**
      * Sets the value of the 'productID' field.
      * @param value The value of 'productID'.
      * @return This builder.
      */
    public com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder setProductID(java.util.UUID value) {
      validate(fields()[0], value);
      this.productID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'productID' field has been set.
      * @return True if the 'productID' field has been set, false otherwise.
      */
    public boolean hasProductID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'productID' field.
      * @return This builder.
      */
    public com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder clearProductID() {
      productID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'imageUrls' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getImageUrls() {
      return imageUrls;
    }


    /**
      * Sets the value of the 'imageUrls' field.
      * @param value The value of 'imageUrls'.
      * @return This builder.
      */
    public com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder setImageUrls(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.imageUrls = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'imageUrls' field has been set.
      * @return True if the 'imageUrls' field has been set, false otherwise.
      */
    public boolean hasImageUrls() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'imageUrls' field.
      * @return This builder.
      */
    public com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder clearImageUrls() {
      imageUrls = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'videoUrls' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getVideoUrls() {
      return videoUrls;
    }


    /**
      * Sets the value of the 'videoUrls' field.
      * @param value The value of 'videoUrls'.
      * @return This builder.
      */
    public com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder setVideoUrls(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.videoUrls = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'videoUrls' field has been set.
      * @return True if the 'videoUrls' field has been set, false otherwise.
      */
    public boolean hasVideoUrls() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'videoUrls' field.
      * @return This builder.
      */
    public com.online.shop.system.kafka.avro.model.ProductReviewContentUrlAvroModel.Builder clearVideoUrls() {
      videoUrls = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProductReviewContentUrlAvroModel build() {
      try {
        ProductReviewContentUrlAvroModel record = new ProductReviewContentUrlAvroModel();
        record.productID = fieldSetFlags()[0] ? this.productID : (java.util.UUID) defaultValue(fields()[0]);
        record.imageUrls = fieldSetFlags()[1] ? this.imageUrls : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.videoUrls = fieldSetFlags()[2] ? this.videoUrls : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProductReviewContentUrlAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProductReviewContentUrlAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProductReviewContentUrlAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<ProductReviewContentUrlAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










